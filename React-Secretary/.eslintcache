[{"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\index.js":"1","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\App.js":"2","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\register.component.js":"3","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\http-common.js":"4","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\calendar.js":"5","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\layouts\\Header.js":"6","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\upload-files-component.js":"7","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\ClientDataService.js":"8","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\update.component.js":"9","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\assignMeeting.js":"10","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\table.component.js":"11","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\upload-files.service.js":"12"},{"size":570,"mtime":1610050259365,"results":"13","hashOfConfig":"14"},{"size":1249,"mtime":1610050259355,"results":"15","hashOfConfig":"14"},{"size":6313,"mtime":1610050259361,"results":"16","hashOfConfig":"14"},{"size":170,"mtime":1610465792869,"results":"17","hashOfConfig":"14"},{"size":2251,"mtime":1610468794163,"results":"18","hashOfConfig":"14"},{"size":2581,"mtime":1610050259366,"results":"19","hashOfConfig":"14"},{"size":3552,"mtime":1610050259362,"results":"20","hashOfConfig":"14"},{"size":961,"mtime":1610050259366,"results":"21","hashOfConfig":"14"},{"size":6120,"mtime":1610050259362,"results":"22","hashOfConfig":"14"},{"size":3628,"mtime":1610050259360,"results":"23","hashOfConfig":"14"},{"size":3539,"mtime":1610050259362,"results":"24","hashOfConfig":"14"},{"size":437,"mtime":1610466395041,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4n5rgc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\index.js",[],["54","55"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\App.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\register.component.js",["56","57"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\http-common.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\calendar.js",["58"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\layouts\\Header.js",["59"],"import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport UploadFiles from \"../components/upload-files-component\"\r\n\r\n class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar navbar-light bg-white\">\r\n                <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"/registerClient\">\r\n          <img className=\"imglogo\" src=\"images/sioux.png\" alt=\"\"/>\r\n              </a>\r\n                    <a className=\"navbar-brand\" href=\"/registerClient\">\r\n                       Secretary App\r\n                    </a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n        \r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n                        <ul className=\"navbar-nav \">\r\n                            <li className=\"nav-item\">\r\n                                    <Link id=\"clients\"to={\"/clients\"} className=\"nav-link\">\r\n                                        Clients\r\n                                    </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/registerClient\"} className=\"nav-link\">\r\n                                    Register Client\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link id=\"uploadImage\"to={\"/uploadImage\"} className=\"nav-link\">\r\n                                Upload\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/calendar\"} className=\"nav-link\">\r\n                                Calendar\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n                <hr style={{backgroundColor:\"#6aa5b3\", height:\"4vh\"}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\upload-files-component.js",["60","61"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\ClientDataService.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\update.component.js",["62","63","64","65","66","67","68"],"import React, {Component} from 'react';\r\nimport ClientDataService from '../logic/ClientDataService';\r\nimport {BrowserRouter, Link, Redirect} from \"react-router-dom\";\r\n\r\nexport default class Update extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getClient = this.getClient.bind(this);\r\n    this.updateClient = this.updateClient.bind(this);\r\n    this.state = {\r\n        currentClient:\r\n            {\r\n                id : null,\r\n                firstName : \"\",\r\n                lastName : \"\",\r\n                email : \"\",\r\n                licencePlate : \"\",\r\n                phoneNumber : \"\"\r\n            },\r\n        message : \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n      this.getClient(this.props.match.params.id);\r\n      this.setState(prevState => ({\r\n          currentClient: {\r\n              ...prevState.currentClient,\r\n              id: this.props.match.params.id\r\n          }\r\n      }));\r\n  }\r\n\r\n  getClient = (id) =>{\r\n    ClientDataService.getClient(id).then(response => {\r\n      this.setState({\r\n        currentClient: response.data\r\n      });\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e)\r\n    });\r\n  }\r\n\r\n    handleChange = (e) => {\r\n        const val = e.target.value;\r\n        const tid = e.target.id;\r\n        this.setState(prevState => ({\r\n            currentClient: {\r\n                ...prevState.currentClient,\r\n                [tid]: val\r\n            }\r\n        }));\r\n        console.log(val + \" \" + tid)\r\n    }\r\n\r\n    updateClient = () =>{\r\n        if(this.state.currentClient.firstName != \"\" || this.state.currentClient.lastName != \"\" || this.state.currentClient.licencePlate !=\"\" || this.state.currentClient.phoneNumber.length == 9)\r\n        {ClientDataService.updateClient(\r\n            this.state.currentClient.id,\r\n            this.state.currentClient\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    alert: \"The client was updated successfully!\"\r\n                });\r\n            })\r\n            .then(()=>{\r\n                this.props.history.push('/clients')\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        }\r\n        else{\r\n            alert(\"The input you gave is inorrect\")\r\n        }\r\n            \r\n    }\r\n\r\n    render() {\r\n        let { currentClient } = this.state;\r\n        return(\r\n            <div>\r\n                <span className=\"h3\">\r\n                <h1>Update Client</h1>\r\n                <hr/>\r\n                <br/>\r\n                <center>\r\n                    <div className=\"col-12 col-lg-4 mt-2 hv-center\">\r\n                        <form>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    id=\"firstName\"\r\n                                    value={currentClient.firstName}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    id=\"lastName\"\r\n                                    value={currentClient.lastName}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"License Plate\"\r\n                                    id=\"licensePlate\"\r\n                                    value={currentClient.licensePlate}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Phone Number\"\r\n                                    id=\"phoneNumber\"\r\n                                    value={currentClient.phoneNumber}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    id=\"email\"\r\n                                    value={currentClient.email}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <Link to={\"/clients\"} className=\"btn btn-danger\"  >\r\n                                    Cancel\r\n                            </Link>\r\n                            <a onClick={this.updateClient} className=\"btn btn-warning\" role=\"button\" >\r\n                               Update Client \r\n                            </a>\r\n                            <br/>\r\n                        </form>\r\n                    </div>\r\n                </center>{/*TODO center tag to div align center*/}\r\n                </span>\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\assignMeeting.js",["69"],"import React, { Component,useState} from 'react';\r\nimport ClientDataService from '../logic/ClientDataService';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n// const Example = () => {\r\n//   const [startDate, setStartDate] = useState(new Date());\r\n//   return (\r\n//     <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n//   );\r\n// };\r\n\r\nclass assignMeeting extends Component{\r\n\r\n  state ={\r\n    currentClient:undefined,\r\n    date:moment().format(\"DD-MM-YYYY\"),\r\n    time: '10:00'\r\n  }\r\n  componentDidMount(){\r\n    this.getClient(this.props.match.params.id);\r\n    \r\n  }\r\n\r\n  getClient = (id) =>{\r\n    ClientDataService.getClient(id).then(response => {\r\n      this.setState({\r\n        currentClient: response.data\r\n      });\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e)\r\n    });\r\n  }\r\n  handleChange =(date)=>{\r\n    console.log(this.state);\r\n    console.log(date);\r\n    var newDate = moment(date).format(\"DD-MM-YYYY\")\r\n    this.setState({\r\n      date:newDate\r\n\r\n    })\r\n    // document.getElementById(\"date\").value=this.state.date;\r\n  }\r\n  handleTime=(time)=>{\r\n    console.log(time);\r\n    var newTime = moment(time).format(\"HH:mm\");\r\n    this.setState({\r\n      time:newTime\r\n    })\r\n  }\r\n  handleSubmit = () =>{\r\n    var date = this.state.date;\r\n    var time = this.state.time;\r\n    var currentClientID = this.state.currentClient.id;\r\n    var data ={\r\n      \"date\": date,\r\n      \"time\":time\r\n    }\r\n    ClientDataService.makeAppointment(currentClientID, data)\r\n    .then(res =>{\r\n        // window.location.href='/clients'\r\n        console.log(res);\r\n        this.props.history.push(\"/clients\")\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state);\r\n    \r\n    return(\r\n      <div className=\"createAppointmentHello\" >\r\n\r\n        \r\n\r\n        {\r\n          this.state.currentClient ?\r\n          <div >\r\n            <p>\r\n             Hello\r\n            </p> \r\n\r\n            <div>\r\n             create an appointment for {this.state.currentClient.firstName} {this.state.currentClient.lastName}\r\n            </div>\r\n            <br></br>\r\n            <table className=\"centerTable\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <div className=\"col-12\">\r\n                      <label className=\"labelAppointment\"> <h6 className=\"margin3\">select a date</h6>\r\n                        <DatePicker id=\"date\" autoFocus value={this.state.date} onChange={this.handleChange} />\r\n                      </label>\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className=\"col-12 createAppointmentDivforInput\">\r\n                      <label className=\"labelAppointment\"> <h6 className=\"margin3\"> select a time</h6>\r\n                        <DatePicker showTimeSelect showTimeSelectOnly value={this.state.time} dateFormat=\"HH:mm\" timeIntervals={30} onChange={this.handleTime}></DatePicker>\r\n                  \r\n                      </label>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              \r\n            </table>\r\n              <div className=\"divButtonAppointment\">\r\n                <button className=\"btn btn-primary btn-lg buttonAppointment\" onClick={this.handleSubmit}>\r\n                  Make Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          :\r\n          <h3> ... waiting for client to load</h3>\r\n        }\r\n       \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default assignMeeting;","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\table.component.js",["70"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\upload-files.service.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":149,"column":33,"nodeType":"81","endLine":149,"endColumn":139},{"ruleId":"82","severity":1,"message":"83","line":36,"column":5,"nodeType":"84","endLine":36,"endColumn":15},{"ruleId":"75","severity":1,"message":"85","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"75","severity":1,"message":"86","line":1,"column":28,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"87","line":72,"column":9,"nodeType":"77","messageId":"78","endLine":72,"endColumn":18},{"ruleId":"75","severity":1,"message":"88","line":3,"column":9,"nodeType":"77","messageId":"78","endLine":3,"endColumn":22},{"ruleId":"75","severity":1,"message":"89","line":3,"column":30,"nodeType":"77","messageId":"78","endLine":3,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":61,"column":47,"nodeType":"92","messageId":"93","endLine":61,"endColumn":49},{"ruleId":"90","severity":1,"message":"91","line":61,"column":90,"nodeType":"92","messageId":"93","endLine":61,"endColumn":92},{"ruleId":"90","severity":1,"message":"91","line":61,"column":137,"nodeType":"92","messageId":"93","endLine":61,"endColumn":139},{"ruleId":"90","severity":1,"message":"94","line":61,"column":189,"nodeType":"92","messageId":"93","endLine":61,"endColumn":191},{"ruleId":"79","severity":1,"message":"80","line":150,"column":29,"nodeType":"81","endLine":150,"endColumn":103},{"ruleId":"75","severity":1,"message":"86","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":35},{"ruleId":"75","severity":1,"message":"95","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":15},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'UploadFiles' is defined but never used.","'useState' is defined but never used.","'fileInfos' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation"]