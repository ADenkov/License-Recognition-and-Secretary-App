[{"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\index.js":"1","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\layouts\\Header.js":"2","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\upload-files-component.js":"3","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\register.component.js":"4","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\update.component.js":"5","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\serviceWorker.js":"6","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\logic\\ClientDataService.js":"7","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\table.component.js":"8","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\validation.js":"9"},{"size":570,"mtime":1606857468971,"results":"10","hashOfConfig":"11"},{"size":2224,"mtime":1606857468971,"results":"12","hashOfConfig":"11"},{"size":3495,"mtime":1606857468967,"results":"13","hashOfConfig":"11"},{"size":5846,"mtime":1606921939658,"results":"14","hashOfConfig":"11"},{"size":6120,"mtime":1606857468967,"results":"15","hashOfConfig":"11"},{"size":5227,"mtime":1606857468974,"results":"16","hashOfConfig":"11"},{"size":654,"mtime":1606484807000,"results":"17","hashOfConfig":"11"},{"size":3368,"mtime":1606857468966,"results":"18","hashOfConfig":"11"},{"size":1185,"mtime":1606920664773,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12u6q12",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\index.js",[],["42","43"],"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\layouts\\Header.js",["44"],"import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport UploadFiles from \"../components/upload-files-component\"\r\n\r\n class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar navbar-light bg-white\">\r\n                <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"/registerClient\">\r\n          <img className=\"imglogo\" src=\"images/sioux.png\" alt=\"\"/>\r\n              </a>\r\n                    <a className=\"navbar-brand\" href=\"/registerClient\">\r\n                       Secretary App\r\n                    </a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n        \r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n                        <ul className=\"navbar-nav \">\r\n                            <li className=\"nav-item\">\r\n                                    <Link to={\"/clients\"} className=\"nav-link\">\r\n                                        Clients\r\n                                    </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/registerClient\"} className=\"nav-link\">\r\n                                    Register Client\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/uploadImage\"} className=\"nav-link\">\r\n                                Upload Image\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n                <hr style={{backgroundColor:\"#6aa5b3\", height:\"4vh\"}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\upload-files-component.js",["45","46"],"import React, { Component, useState } from \"react\";\r\nimport UploadService from \"../services/upload-files.service\";\r\n\r\n\r\nexport default class UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          selectedFiles: undefined,\r\n          currentFile: undefined,\r\n          progress: 0,\r\n          message: \"\",\r\n    \r\n          fileInfos: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        UploadService.getFiles().then((response) => {\r\n          this.setState({\r\n            fileInfos: response.data,\r\n          });\r\n        });\r\n    }\r\n    selectFile = (event) =>{\r\n        this.setState({\r\n          selectedFiles: event.target.files,\r\n        });\r\n    }\r\n    upload=()=> {\r\n        let currentFile = this.state.selectedFiles[0];\r\n    \r\n        this.setState({\r\n          progress: 0,\r\n          currentFile: currentFile,\r\n        });\r\n    \r\n        UploadService.upload(currentFile, (event) => {\r\n          this.setState({\r\n            progress: Math.round((100 * event.loaded) / event.total),\r\n          });\r\n        })\r\n          .then((response) => {\r\n            this.setState({\r\n              message: response.data.message,\r\n            });\r\n            console.log(response.data.message);\r\n            return UploadService.getFiles();\r\n          })\r\n          .then((files) => {\r\n            this.setState({\r\n              fileInfos: files.data,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              progress: 0,\r\n              message: \"Could not upload the file!\",\r\n              currentFile: undefined,\r\n            });\r\n          });\r\n    \r\n        this.setState({\r\n          selectedFiles: undefined,\r\n        });\r\n    }\r\n  render() {\r\n    const {\r\n        selectedFiles,\r\n        currentFile,\r\n        progress,\r\n        message,\r\n        fileInfos,\r\n      } = this.state;\r\n  \r\n      return (\r\n        <div>\r\n          {currentFile && (\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                role=\"progressbar\"\r\n                aria-valuenow={progress}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                style={{ width: progress + \"%\", backgroundColor:\"#ff6a00\" }}\r\n              >\r\n                {progress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n   <form class=\"md-form\">\r\n          <label className=\"btn btn-default\">\r\n            <input type=\"file\" onChange={this.selectFile} />\r\n          </label>\r\n\r\n\r\n   </form>\r\n\r\n\r\n  \r\n          <button className=\"btn\"\r\n                  style={{backgroundColor:\"#ff6a00\", color:\"#FFF\"}}\r\n            disabled={!selectedFiles}\r\n            onClick={this.upload}\r\n          >\r\n            Upload\r\n          </button>\r\n\r\n          <div className=\"alert alert-light\" role=\"alert\">\r\n            {message}\r\n          </div>\r\n\r\n\r\n\r\n            {/*<div className=\"card\">*/}\r\n          {/*  <div className=\"card-header\">List of Files</div>*/}\r\n          {/*  <ul className=\"list-group list-group-flush\">*/}\r\n          {/*    {fileInfos &&*/}\r\n          {/*      fileInfos.map((file, index) => (*/}\r\n          {/*        <li className=\"list-group-item\" key={index}>*/}\r\n          {/*          <a href={file.url}>{file.name}</a>*/}\r\n          {/*        </li>*/}\r\n          {/*      ))}*/}\r\n          {/*  </ul>*/}\r\n          {/*</div>*/}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\register.component.js",["47","48"],"import React, { Component } from \"react\";\nimport ClientDataService from \"../logic/ClientDataService\";\nimport { Link } from \"react-router-dom\";\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport validator from 'validator';\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst email = (value) => {\n    if (!validator.isEmail(value)) {\n        return `${value} is not a valid email.`\n    }\n};\n\nconst vname = value => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The name must be between 3 and 20 characters.\n            </div>\n        );\n    }\n};\nconst vplate = value => {\n    if (value.length < 3 || value.length > 8) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The license plate must be between 3 and 8 characters.\n            </div>\n        );\n    }\n};\nconst vPhoneNumber = value => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        );\n    }\n};\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.addClient = this.addClient.bind(this);\n        this.state = {\n            currentClient: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                licensePlate: \"\",\n                phoneNumber: \"\"\n            },\n            message: \"\"\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    addClient = () => {\n        const data = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            licensePlate: this.state.licensePlate,\n            phoneNumber: this.state.phoneNumber\n        };\n\n        console.log(this.state.firstName);\n        if (this.state.firstName !== undefined && this.state.lastName !== undefined && this.state.licencePlate !== undefined) {\n            ClientDataService.postClient(data)\n                .then(response => {\n                    this.setState({\n                        currentClient: {\n                            firstName: response.data.firstName,\n                            lastName: response.data.lastName,\n                            email: response.data.email,\n                            licensePlate: response.data.licensePlate,\n                            phoneNumber: response.data.phoneNumber\n                        },\n                        message: \"Client Added!\"\n\n                    });\n\n                    console.log(response.data);\n                })\n                .then(() => {\n                    this.props.history.push('/clients')\n                })\n\n                .catch(e => {\n                    console.log(e);\n                });\n        }\n        else {\n            alert(\"there is an invalid data input\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <span className=\"h3\">\n                    <h1 id={\"title\"}>Register Client</h1>\n                    <hr style={{ backgroundColor: \"#6aa5b3\" }} />\n                    <br />\n                    <center>\n                        <div className=\"col-12 col-lg-4 mt-2 hv-center\">\n                            <Form>\n                                <div className=\"form-group text-left\">\n                                    <Input\n                                        onChange={this.handleChange}\n                                        className=\"form-control\"\n                                        id=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        validations={[required, vname]}\n                                    />\n                                </div>\n                                <div className=\"form-group text-left\">\n                                    <Input onChange={this.handleChange} className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" validations={[required, vname]} />\n                                </div>\n                                <div className=\"form-group text-left\">\n                                    <Input onChange={this.handleChange} className=\"form-control\" id=\"licensePlate\" placeholder=\"License Plate\" validations={[required, vplate]} />\n                                </div>\n                                <div className=\"form-group text-left\">\n                                    <Input onChange={this.handleChange} type=\"tel\" className=\"form-control\" id=\"phoneNumber\" placeholder=\"Phone Number\" validations={[required, vPhoneNumber]} />\n                                </div>\n                                <div className=\"form-group text-left\">\n                                    <Input onChange={this.handleChange} type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Email\" validations={[required, email]} />\n                                </div>\n\n                                <a onClick={this.addClient} className=\"btn btn-info\" role=\"button\" style={{ backgroundColor: \"#ff6a00\" }}>Register Client</a>\n\n                                <br />\n                            </Form>\n                        </div>\n                    </center>\n                </span>\n                <br />\n                <p>{this.state.message}</p>\n            </div>\n        )\n    }\n\n\n}\nexport default Register;\n\n","C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\update.component.js",["49","50","51","52","53","54","55"],"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\serviceWorker.js",[],"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\logic\\ClientDataService.js",[],"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\table.component.js",["56"],"C:\\Users\\User\\S3-CB03-Group3\\React-Secretary\\src\\components\\validation.js",["57","58","59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":19},{"ruleId":"66","severity":1,"message":"70","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"71","line":72,"column":9,"nodeType":"68","messageId":"69","endLine":72,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":147,"column":33,"nodeType":"75","endLine":147,"endColumn":139},{"ruleId":"66","severity":1,"message":"76","line":3,"column":9,"nodeType":"68","messageId":"69","endLine":3,"endColumn":22},{"ruleId":"66","severity":1,"message":"77","line":3,"column":30,"nodeType":"68","messageId":"69","endLine":3,"endColumn":38},{"ruleId":"78","severity":1,"message":"79","line":61,"column":47,"nodeType":"80","messageId":"81","endLine":61,"endColumn":49},{"ruleId":"78","severity":1,"message":"79","line":61,"column":90,"nodeType":"80","messageId":"81","endLine":61,"endColumn":92},{"ruleId":"78","severity":1,"message":"79","line":61,"column":137,"nodeType":"80","messageId":"81","endLine":61,"endColumn":139},{"ruleId":"78","severity":1,"message":"82","line":61,"column":189,"nodeType":"80","messageId":"81","endLine":61,"endColumn":191},{"ruleId":"73","severity":1,"message":"74","line":150,"column":29,"nodeType":"75","endLine":150,"endColumn":103},{"ruleId":"66","severity":1,"message":"83","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":15},{"ruleId":"66","severity":1,"message":"84","line":2,"column":7,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},{"ruleId":"66","severity":1,"message":"85","line":12,"column":7,"nodeType":"68","messageId":"69","endLine":12,"endColumn":12},{"ruleId":"66","severity":1,"message":"86","line":18,"column":7,"nodeType":"68","messageId":"69","endLine":18,"endColumn":12},{"ruleId":"66","severity":1,"message":"87","line":27,"column":7,"nodeType":"68","messageId":"69","endLine":27,"endColumn":13},{"ruleId":"66","severity":1,"message":"88","line":36,"column":7,"nodeType":"68","messageId":"69","endLine":36,"endColumn":19},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'UploadFiles' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'fileInfos' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Table' is defined but never used.","'required' is assigned a value but never used.","'email' is assigned a value but never used.","'vname' is assigned a value but never used.","'vplate' is assigned a value but never used.","'vPhoneNumber' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]