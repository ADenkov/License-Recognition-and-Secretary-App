{"ast":null,"code":"var _jsxFileName = \"D:\\\\git-repos\\\\New folder\\\\S3-CB03-Group3\\\\React-Secretary\\\\src\\\\components\\\\ClientInfo.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport Clients from \"../components/Client\";\nimport Table from '../components/table.component.js';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nexport class ClientInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteClient = id => {\n      if (window.confirm('Are you sure')) {\n        let clients = this.state.clients.filter(client => {\n          return client.id !== id;\n        }); //Using some sort of fetch to display the deletion\n\n        this.setState({\n          clients: clients\n        });\n        fetch(\"http://localhost:8080/clients/delete/\" + id, {\n          method: 'DELETE',\n          header: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    };\n\n    this.state = {\n      clients: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/clients/all\").then(response => {\n      response.json().then(clients => this.setState({\n        clients: clients\n      }));\n    });\n  }\n\n  render() {\n    if (this.state.clients.length === 0) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, \"error\");else return /*#__PURE__*/React.createElement(Table, {\n      clients: this.state.clients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\nexport default ClientInfo;","map":{"version":3,"sources":["D:/git-repos/New folder/S3-CB03-Group3/React-Secretary/src/components/ClientInfo.js"],"names":["React","Clients","Table","ClientInfo","Component","constructor","props","deleteClient","id","window","confirm","clients","state","filter","client","setState","fetch","method","header","componentDidMount","then","response","json","render","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAO,sCAAP,C,CACA;;AAGA,OAAO,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWrBC,YAXqB,GAWLC,EAAD,IAAQ;AACrB,UAAGC,MAAM,CAACC,OAAP,CAAe,cAAf,CAAH,EAAmC;AACjC,YAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,MAAnB,CAA0BC,MAAM,IAAI;AAC9C,iBAAOA,MAAM,CAACN,EAAP,KAAcA,EAArB;AACH,SAFa,CAAd,CADiC,CAIjC;;AACA,aAAKO,QAAL,CAAc;AACVJ,UAAAA,OAAO,EAAEA;AADC,SAAd;AAGAK,QAAAA,KAAK,CAAC,0CAA0CR,EAA3C,EAA+C;AAChDS,UAAAA,MAAM,EAAE,QADwC;AAEhDC,UAAAA,MAAM,EAAE;AACJ,sBAAU,kBADN;AAEJ,4BAAgB;AAFZ;AAFwC,SAA/C,CAAL;AAOH;AAAE,KA3BkB;;AAEb,SAAKN,KAAL,GAAa;AAACD,MAAAA,OAAO,EAAE;AAAV,KAAb;AACL;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CI,IAA3C,CAAgDC,QAAQ,IAAI;AAC9DA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBT,OAAO,IAAI,KAAKI,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAEA;AAAV,OAAd,CAAjC;AACG,KAFD;AAIH;;AAmBCY,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKX,KAAL,CAAWD,OAAX,CAAmBa,MAAnB,KAA8B,CAAjC,EACA,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP,CADA,KAGA,oBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAG,KAAKZ,KAAL,CAAWD,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAtC6C;AAyChD,eAAeR,UAAf","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\nimport Clients from \"../components/Client\";\r\nimport Table from '../components/table.component.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\n\r\n\r\nexport class ClientInfo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n        this.state = {clients: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8080/clients/all\").then(response => {\r\n  response.json().then( clients => this.setState({clients: clients}))\r\n    });\r\n\r\n}\r\ndeleteClient = (id) => {\r\n  if(window.confirm('Are you sure')) {\r\n    let clients = this.state.clients.filter(client => {\r\n        return client.id !== id\r\n    });\r\n    //Using some sort of fetch to display the deletion\r\n    this.setState({\r\n        clients: clients\r\n    })\r\n    fetch(\"http://localhost:8080/clients/delete/\" + id, {\r\n        method: 'DELETE',\r\n        header: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n} }\r\n\r\n  render() {\r\n    if(this.state.clients.length === 0)\r\n    return <div>error</div>;\r\n    else\r\n    return (\r\n      <Table clients={ this.state.clients } />  \r\n    )\r\n  }\r\n  \r\n}\r\nexport default ClientInfo;\r\n"]},"metadata":{},"sourceType":"module"}