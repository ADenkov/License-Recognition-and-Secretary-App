{"ast":null,"code":"var _jsxFileName = \"D:\\\\git-repos\\\\New folder\\\\S3-CB03-Group3\\\\React-Secretary\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport RegisterClient from \"./components/register.component\";\nimport Header from \"./layouts/Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UpdateClient from \"./UpdateClient\";\nimport Table from \"./components/table.component\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addClient = client => {\n      client.key = Math.random();\n      let clients = [...this.state.clients, client];\n      this.setState({\n        clients: clients\n      });\n    };\n\n    this.deleteClient = id => {\n      if (window.confirm('Are you sure')) {\n        let clients = this.state.clients.filter(client => {\n          return client.id !== id;\n        });\n        this.setState({\n          clients: clients\n        });\n        fetch(\"https://heroku-secretary.herokuapp.com/clients/delete/\" + id, {\n          method: 'DELETE',\n          header: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    };\n\n    this.state = {\n      clients: []\n    };\n  }\n\n  //getClient = (client) => {\n  // let clients = this.state.clients.filter(client => {\n  // \treturn client\n  // });\n  // fetch(\"https://heroku-secretary.herokuapp.com/clients/update/\" + client.id,{method: 'PUT'})\n  // \t.then(response => response.json())\n  // \t.then(data => client = data)\n  // \t.then( clients => this.setState({clients: clients}))\n  // \tfunction refreshPage(){\n  // \twindow.location.reload(false);\n  // \t}\n  // let clients = this.state.clients.map((client) => {\n  // \tif(client.id == id) {\n  // \t\tthis.setState({\n  // \t\t\t_Client: client\n  // \t\t})\n  // \t\treturn client;\n  // \t}\n  // })\n  //\n  // this.setState(\n  // \tclients:\n  // )\n  //}\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/clients\",\n      component: Table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/updateClient\",\n      component: UpdateClient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/registerClient\",\n      component: RegisterClient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/git-repos/New folder/S3-CB03-Group3/React-Secretary/src/App.js"],"names":["React","RegisterClient","Header","BrowserRouter","Router","Switch","Route","UpdateClient","Table","App","Component","constructor","props","addClient","client","key","Math","random","clients","state","setState","deleteClient","id","window","confirm","filter","fetch","method","header","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAMnBC,SANmB,GAMNC,MAAD,IAAW;AACtBA,MAAAA,MAAM,CAACC,GAAP,GAAWC,IAAI,CAACC,MAAL,EAAX;AACC,UAAIC,OAAO,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWD,OAAf,EAAwBJ,MAAxB,CAAd;AACD,WAAKM,QAAL,CAAc;AACbF,QAAAA,OAAO,EAAEA;AADI,OAAd;AAGA,KAZkB;;AAAA,SAanBG,YAbmB,GAaHC,EAAD,IAAQ;AACrB,UAAGC,MAAM,CAACC,OAAP,CAAe,cAAf,CAAH,EAAmC;AACpC,YAAIN,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmBO,MAAnB,CAA0BX,MAAM,IAAI;AACjD,iBAAOA,MAAM,CAACQ,EAAP,KAAcA,EAArB;AACA,SAFa,CAAd;AAGA,aAAKF,QAAL,CAAc;AACbF,UAAAA,OAAO,EAAEA;AADI,SAAd;AAGAQ,QAAAA,KAAK,CAAC,2DAA2DJ,EAA5D,EAAgE;AACpEK,UAAAA,MAAM,EAAE,QAD4D;AAEpEC,UAAAA,MAAM,EAAE;AACP,sBAAU,kBADH;AAEP,4BAAgB;AAFT;AAF4D,SAAhE,CAAL;AAQA;AACA,KA9BkB;;AAElB,SAAKT,KAAL,GAAa;AAACD,MAAAA,OAAO,EAAE;AAAV,KAAb;AACA;;AA6BD;AACE;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AAEDW,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAErB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAED,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAIA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,SAAS,EAAEN,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADD,CAJD,CADD;AAkBC;;AA7E+B;;AA+ElC,eAAeQ,GAAf","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport RegisterClient from \"./components/register.component\"\r\nimport Header from \"./layouts/Header\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport UpdateClient from \"./UpdateClient\";\r\nimport Table from \"./components/table.component\";\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {clients: []};\r\n\t}\r\n\r\n  \r\n\taddClient = (client) =>{\r\n\t\tclient.key=Math.random();\r\n  \tlet clients = [...this.state.clients, client]\r\n\t\tthis.setState({\r\n\t\t\tclients: clients\r\n\t\t})\r\n\t}\r\n\tdeleteClient = (id) => {\r\n  \tif(window.confirm('Are you sure')) {\r\n\t\tlet clients = this.state.clients.filter(client => {\r\n\t\t\treturn client.id !== id\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tclients: clients\r\n\t\t})\r\n\t\tfetch(\"https://heroku-secretary.herokuapp.com/clients/delete/\" + id, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theader: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t}\r\n\r\n\t//getClient = (client) => {\r\n\t\t\t// let clients = this.state.clients.filter(client => {\r\n\t\t\t// \treturn client\r\n\t\t\t// });\r\n\t\t// fetch(\"https://heroku-secretary.herokuapp.com/clients/update/\" + client.id,{method: 'PUT'})\r\n\t\t// \t.then(response => response.json())\r\n\t\t// \t.then(data => client = data)\r\n\t\t// \t.then( clients => this.setState({clients: clients}))\r\n\t\t// \tfunction refreshPage(){\r\n\t\t// \twindow.location.reload(false);\r\n\t\t// \t}\r\n\t\t\t// let clients = this.state.clients.map((client) => {\r\n\t\t\t// \tif(client.id == id) {\r\n\t\t\t// \t\tthis.setState({\r\n\t\t\t// \t\t\t_Client: client\r\n\t\t\t// \t\t})\r\n\t\t\t// \t\treturn client;\r\n\t\t\t// \t}\r\n\t\t\t// })\r\n\t\t//\r\n\t\t// this.setState(\r\n\t\t// \tclients:\r\n\t\t// )\r\n\t\t//}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* <Clients deleteClient={this.deleteClient} clients = {this.state.clients}/>\r\n\t\t\t\t<Register addClient={this.addClient}/> */}\r\n\t\t\t\t{/*<Update getClient = {this.getClient}/>*/}\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<Route path=\"/clients\" component={Table} />\r\n\t\t\t\t\t\t<Route path=\"/updateClient\" component={UpdateClient} />\r\n\t\t\t\t\t<Route path=\"/registerClient\" component={RegisterClient} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t)\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}