{"version":3,"sources":["logic/http-common.js","logic/ClientDataService.js","components/register.component.js","logic/upload-files.service.js","components/upload-files-component.js","layouts/Header.js","components/table.component.js","components/update.component.js","components/assignMeeting.js","components/calendar.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","email","date","required","value","className","role","validator","isEmail","vname","length","vplate","vPhoneNumber","Register","props","handleChange","e","setState","prevState","currentClient","target","addClient","firstName","state","lastName","licensePlate","phoneNumber","undefined","ClientDataService","postClient","then","response","message","console","log","history","push","catch","alert","bind","style","backgroundColor","onChange","this","placeholder","validations","type","onClick","Component","file","onUploadProgress","formData","FormData","append","UploadFiles","selectFile","event","selectedFiles","files","upload","currentFile","progress","UploadService","Math","round","loaded","total","getFiles","fileInfos","aria-valuenow","aria-valuemin","aria-valuemax","width","class","color","disabled","Header","href","src","alt","data-toggle","data-target","to","height","TableComponent","deleteClient","window","confirm","retrieveClients","location","reload","emailClient","sendEmail","clients","getAll","map","client","index","colSpan","React","Update","getClient","val","tid","updateClient","licencePlate","match","params","assignMeeting","moment","format","time","newDate","handleTime","newTime","handleSubmit","currentClientID","makeAppointment","res","autoFocus","showTimeSelect","showTimeSelectOnly","dateFormat","timeIntervals","calendar","appointments","personName","getAppointmentsForDate","app","onLoad","getFullNameById","personID","on","App","exact","path","component","RegisterClient","Table","UpdateClient","UploadImage","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"yRAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,yBACRC,QAAS,CACL,eAAgB,sBC8BP,M,iGA/BN,OAAOC,EAAKC,IAAI,kB,gCAEVC,GACR,OAAOF,EAAKC,IAAL,mBAAqBC,M,iCAEnBC,GACT,OAAOH,EAAKI,KAAK,eAAiBD,K,mCAEvBD,EAAIC,GACf,OAAOH,EAAKK,IAAL,0BAA4BH,GAAMC,K,mCAE9BD,GACX,OAAOF,EAAKM,OAAL,0BAA+BJ,M,sCAGpC,OAAOF,EAAKM,OAAO,wB,gCAGdC,GACN,OAAOP,EAAKI,KAAL,4BAA+BG,M,sCAE1BL,EAAGC,GAEf,OAAOH,EAAKI,KAAK,4BAA6BF,EAAIC,K,6CAE/BK,GAEnB,OAAOR,EAAKC,IAAL,0CAA4CO,Q,2DCxBrDC,EAAW,SAAAC,GACb,IAAKA,EACD,OACI,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAONL,EAAQ,SAACG,GACX,IAAKG,IAAUC,QAAQJ,GACnB,MAAM,GAAN,OAAUA,EAAV,2BAIFK,EAAQ,SAAAL,GACV,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,GACnC,OACI,qBAAKL,UAAU,qBAAqBC,KAAK,QAAzC,4DAMNK,EAAS,SAAAP,GACX,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,EACnC,OACI,qBAAKL,UAAU,qBAAqBC,KAAK,QAAzC,oEAMNM,EAAe,SAAAR,GACjB,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,GACnC,OACI,qBAAKL,UAAU,qBAAqBC,KAAK,QAAzC,gEAuHGO,E,kDA/GX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAeVC,aAAe,SAACC,GACR,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBC,cAAc,2BACPD,EAAUC,eADJ,kBAERH,EAAEI,OAAOxB,GAAKoB,EAAEI,OAAOhB,aApBrB,EAyBnBiB,UAAY,WACR,IAAMxB,EAAO,CACTyB,UAAW,EAAKC,MAAMJ,cAAcG,UACpCE,SAAU,EAAKD,MAAMJ,cAAcK,SACnCvB,MAAO,EAAKsB,MAAMJ,cAAclB,MAChCwB,aAAc,EAAKF,MAAMJ,cAAcM,aACvCC,YAAa,EAAKH,MAAMJ,cAAcO,kBAGCC,IAAvC,EAAKJ,MAAMJ,cAAcG,gBAAiEK,IAAtC,EAAKJ,MAAMJ,cAAcK,eAA6DG,IAAnC,EAAKJ,MAAMJ,cAAclB,YAAiE0B,IAA1C,EAAKJ,MAAMJ,cAAcM,mBAAuEE,IAAzC,EAAKJ,MAAMJ,cAAcO,YACvOE,EAAkBC,WAAWhC,GACxBiC,MAAK,SAAAC,GACF,EAAKd,SAAS,CACVE,cAAe,CACXG,UAAWS,EAASlC,KAAKyB,UACzBE,SAAUO,EAASlC,KAAK2B,SACxBvB,MAAO8B,EAASlC,KAAKI,MACrBwB,aAAcM,EAASlC,KAAK4B,aAC5BC,YAAaK,EAASlC,KAAK6B,aAE/BM,QAAS,kBAIbC,QAAQC,IAAIH,EAASlC,SAExBiC,MAAK,WACF,EAAKhB,MAAMqB,QAAQC,KAAK,eAG3BC,OAAM,SAAArB,GACHiB,QAAQC,IAAIlB,MAIpBsB,MAAM,mCA1DV,EAAKvB,aAAe,EAAKA,aAAawB,KAAlB,gBACpB,EAAKlB,UAAY,EAAKA,UAAUkB,KAAf,gBACjB,EAAKhB,MAAQ,CACTJ,cAAe,CACXG,UAAW,GACXE,SAAU,GACVvB,MAAO,GACPwB,aAAc,GACdC,YAAa,IAEjBM,QAAS,IAZE,E,qDAiEf,OACI,gCACI,uBAAM3B,UAAU,KAAhB,UACI,oBAAIT,GAAI,QAAR,6BACA,oBAAI4C,MAAO,CAAEC,gBAAiB,aAC9B,uBACA,iCACI,qBAAKpC,UAAU,iCAAf,SACI,eAAC,IAAD,WACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,IAAD,CACIqC,SAAUC,KAAK5B,aACfV,UAAU,eACVT,GAAG,YACHgD,YAAY,aACZC,YAAa,CAAC1C,EAAUM,OAGhC,qBAAKJ,UAAU,uBAAf,SACI,cAAC,IAAD,CAAOqC,SAAUC,KAAK5B,aAAcV,UAAU,eAAeT,GAAG,WAAWgD,YAAY,YAAYC,YAAa,CAAC1C,EAAUM,OAE/H,qBAAKJ,UAAU,uBAAf,SACI,cAAC,IAAD,CAAOqC,SAAUC,KAAK5B,aAAcV,UAAU,eAAeT,GAAG,eAAegD,YAAY,gBAAgBC,YAAa,CAAC1C,EAAUQ,OAEvI,qBAAKN,UAAU,uBAAf,SACI,cAAC,IAAD,CAAOqC,SAAUC,KAAK5B,aAAc+B,KAAK,MAAMzC,UAAU,eAAeT,GAAG,cAAcgD,YAAY,eAAeC,YAAa,CAAC1C,EAAUS,OAEhJ,qBAAKP,UAAU,uBAAf,SACI,cAAC,IAAD,CAAOqC,SAAUC,KAAK5B,aAAc+B,KAAK,QAAQzC,UAAU,eAAeT,GAAG,QAAQgD,YAAY,QAAQC,YAAa,CAAC1C,EAAUF,OAGrI,mBAAG8C,QAASJ,KAAKtB,UAAWhB,UAAU,eAAeC,KAAK,SAASkC,MAAO,CAAEC,gBAAiB,WAA7F,6BAEA,iCAKhB,uBACA,4BAAIE,KAAKpB,MAAMS,iB,GAzGRgB,a,QC9BR,M,+FAlBNC,EAAMC,GACX,IAAIC,EAAW,IAAIC,SAInB,OAFAD,EAASE,OAAO,OAAQJ,GAEjBvD,EAAKI,KAAK,UAAWqD,EAAU,CACpC1D,QAAS,CACP,eAAgB,uBAElByD,uB,iCAKF,OAAOxD,EAAKC,IAAI,c,MCbC2D,E,kDACjB,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IAiBVyC,WAAa,SAACC,GACV,EAAKvC,SAAS,CACZwC,cAAeD,EAAMpC,OAAOsC,SApBf,EAuBnBC,OAAS,WACL,IAAIC,EAAc,EAAKrC,MAAMkC,cAAc,GAE3C,EAAKxC,SAAS,CACZ4C,SAAU,EACVD,YAAaA,IAGfE,EAAcH,OAAOC,GAAa,SAACJ,GACjC,EAAKvC,SAAS,CACZ4C,SAAUE,KAAKC,MAAO,IAAMR,EAAMS,OAAUT,EAAMU,YAGnDpC,MAAK,SAACC,GAKL,OAJA,EAAKd,SAAS,CACZe,QAASD,EAASlC,KAAKmC,UAEzBC,QAAQC,IAAIH,EAASlC,KAAKmC,SACnB8B,EAAcK,cAEtBrC,MAAK,SAAC4B,GACL,EAAKzC,SAAS,CACZmD,UAAWV,EAAM7D,UAGpBwC,OAAM,WACL,EAAKpB,SAAS,CACZ4C,SAAU,EACV7B,QAAS,6BACT4B,iBAAajC,OAInB,EAAKV,SAAS,CACZwC,mBAAe9B,KAvDjB,EAAKJ,MAAQ,CACXkC,mBAAe9B,EACfiC,iBAAajC,EACbkC,SAAU,EACV7B,QAAS,GAEToC,UAAW,IARE,E,gEAWE,IAAD,OAChBN,EAAcK,WAAWrC,MAAK,SAACC,GAC7B,EAAKd,SAAS,CACZmD,UAAWrC,EAASlC,Y,+BA8CpB,IAAD,EAOD8C,KAAKpB,MALPkC,EAFG,EAEHA,cACAG,EAHG,EAGHA,YACAC,EAJG,EAIHA,SACA7B,EALG,EAKHA,QALG,EAMHoC,UAGF,OACE,gCACGR,GACC,qBAAKvD,UAAU,WAAf,SACE,sBACEA,UAAU,sDACVC,KAAK,cACL+D,gBAAeR,EACfS,gBAAc,IACdC,gBAAc,MACd/B,MAAO,CAAEgC,MAAOX,EAAW,IAAKpB,gBAAgB,WANlD,UAQGoB,EARH,SAYX,sBAAMY,MAAM,UAAZ,SACO,uBAAOpE,UAAU,kBAAjB,SACE,uBAAOT,GAAG,aAAakD,KAAK,OAAOJ,SAAUC,KAAKY,iBAOxD,qBAAK3D,GAAG,SAAR,SACI,wBAAQS,UAAU,MACVmC,MAAO,CAACC,gBAAgB,UAAWiC,MAAM,QAC/CC,UAAWlB,EACXV,QAASJ,KAAKgB,OAHhB,sBASA,qBAAKtD,UAAU,oBAAoBC,KAAK,QAAxC,SACG0B,W,GA1G4BgB,aCsD1B4B,E,uKApDP,OACI,gCACI,qBAAKvE,UAAU,uDAAf,SACA,sBAAKA,UAAU,YAAf,UACA,mBAAGA,UAAU,eAAewE,KAAK,kBAAjC,SACN,qBAAKxE,UAAU,UAAUyE,IAAI,mBAAmBC,IAAI,OAE1C,mBAAG1E,UAAU,eAAewE,KAAK,kBAAjC,2BAGA,wBAAQxE,UAAU,iBAAiByC,KAAK,SAASkC,cAAY,WAAWC,cAAY,cAApF,SACI,sBAAM5E,UAAU,0BAGpB,sBAAKA,UAAU,2BAA2BT,GAAG,aAA7C,UAEI,oBAAIS,UAAU,cAAd,SACI,oBAAIA,UAAU,WAAd,SACQ,cAAC,IAAD,CAAMT,GAAG,UAASsF,GAAI,WAAY7E,UAAU,WAA5C,yBAKZ,oBAAIA,UAAU,aAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAM6E,GAAI,kBAAmB7E,UAAU,WAAvC,iCAKR,oBAAIA,UAAU,aAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMT,GAAG,cAAasF,GAAI,eAAgB7E,UAAU,WAApD,wBAKR,oBAAIA,UAAU,aAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAM6E,GAAI,YAAa7E,UAAU,WAAjC,kCAQhB,oBAAImC,MAAO,CAACC,gBAAgB,UAAW0C,OAAO,gB,GAjDxCnC,a,OCkGPoC,E,kDA/Fb,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAqBNuE,aAAe,SAACzF,GACX0F,OAAOC,QAAQ,mBACd3D,EAAkByD,aAAazF,GAC1BkC,MAAK,SAAAC,GACFE,QAAQC,IAAIH,EAASlC,SAExBwC,OAAM,SAAArB,GACHiB,QAAQC,IAAIlB,MAEpB,EAAKwE,kBACLF,OAAOG,SAASC,QAAO,KAhCZ,EAoCnBC,YAAc,SAAC1F,GACX2B,EAAkBgE,UAAU3F,GACvB6B,MAAK,SAAAC,GACFO,MAAMP,EAASlC,SAElBwC,OAAM,SAAArB,GACHsB,MAAM,sDACNL,QAAQC,IAAIlB,OAzCtB,EAAKO,MAAQ,CAACsE,QAAS,IACvB,EAAKL,gBAAkB,EAAKA,gBAAgBjD,KAArB,gBAHN,E,gEAOfI,KAAK6C,oB,wCAGY,IAAD,OACd5D,EAAkBkE,SACbhE,MAAK,SAAAC,GACF,EAAKd,SAAS,CACV4E,QAAS9D,EAASlC,OAEtBoC,QAAQC,IAAIH,EAASlC,SAExBwC,OAAM,SAAArB,GACHiB,QAAQC,IAAIlB,Q,+BA4BjB,IAAD,OACR,OACI,iCACF,wBAAOX,UAAU,8BAA8BmC,MAAO,CAACgC,MAAM,OAA7D,UACA,gCACE,+BACA,oBAAInE,UAAU,cAAd,wBACI,oBAAIA,UAAU,cAAd,uBACA,oBAAIA,UAAU,cAAd,2BACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,0BACA,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,gBACd,oBAAIA,UAAU,qBAIlB,gCACGsC,KAAKpB,MAAMsE,QAAQnF,OAAS,EAAKiC,KAAKpB,MAAMsE,QAAQE,KAAK,SAACC,EAAQC,GAChE,OACC,+BACI,oBAAI5F,UAAU,WAAd,SAA2B2F,EAAO1E,YAClC,oBAAIjB,UAAU,WAAd,SAA2B2F,EAAOxE,WAClC,oBAAInB,UAAU,WAAd,SAA2B2F,EAAOvE,eAClC,oBAAIpB,UAAU,WAAd,SAA2B2F,EAAO/F,QAClC,oBAAII,UAAU,WAAd,SAA2B2F,EAAOtE,cAClC,oBAAIrB,UAAU,WAAd,SAAyB,iCAAQ,wBAAQA,UAAU,eAAlB,SAC7B,cAAC,IAAD,CAAMmC,MAAO,CAACkC,MAAM,WAAYQ,GAAI,sBAAwBc,EAAOpG,GAAnE,oCAKJ,oBAAIS,UAAU,WAAd,SAAyB,iCAAQ,wBAAQA,UAAU,kBAAlB,SAC7B,cAAC,IAAD,CAAMmC,MAAO,CAACkC,MAAM,WAAYQ,GAAI,iBAAmBc,EAAOpG,GAA9D,0BAIJ,oBAAIS,UAAU,WAAd,SAAyB,iCAAQ,wBAAQ0C,QAAS,kBAAM,EAAKsC,aAAaW,EAAOpG,KAAKS,UAAU,iBAA/D,0BAjB3B4F,MAoBR,6BAAI,oBAAIC,QAAQ,IAAZ,qC,GAzFWC,IAAMnD,WCDdoD,E,kDACnB,WAAYtF,GAAO,IAAD,8BAChB,cAAMA,IA6BRuF,UAAY,SAACzG,GACXgC,EAAkByE,UAAUzG,GAAIkC,MAAK,SAAAC,GACnC,EAAKd,SAAS,CACZE,cAAeY,EAASlC,OAE1BoC,QAAQC,IAAIH,EAASlC,SAEtBwC,OAAM,SAAArB,GACLiB,QAAQC,IAAIlB,OAtCE,EA0ChBD,aAAe,SAACC,GACZ,IAAMsF,EAAMtF,EAAEI,OAAOhB,MACfmG,EAAMvF,EAAEI,OAAOxB,GACrB,EAAKqB,UAAS,SAAAC,GAAS,MAAK,CACxBC,cAAc,2BACPD,EAAUC,eADJ,kBAERoF,EAAMD,QAGfrE,QAAQC,IAAIoE,EAAM,IAAMC,IAnDZ,EAsDhBC,aAAe,WAC8B,IAAtC,EAAKjF,MAAMJ,cAAcG,WAAwD,IAArC,EAAKC,MAAMJ,cAAcK,UAA0D,IAAxC,EAAKD,MAAMJ,cAAcsF,cAAoE,GAA/C,EAAKlF,MAAMJ,cAAcO,YAAYhB,OAC5KkB,EAAkB4E,aACf,EAAKjF,MAAMJ,cAAcvB,GACzB,EAAK2B,MAAMJ,eAEVW,MAAK,SAAAC,GACFE,QAAQC,IAAIH,EAASlC,MACrB,EAAKoB,SAAS,CACVqB,MAAO,4CAGdR,MAAK,WACF,EAAKhB,MAAMqB,QAAQC,KAAK,eAE3BC,OAAM,SAAArB,GACHiB,QAAQC,IAAIlB,MAIhBsB,MAAM,mCAxEd,EAAKvB,aAAe,EAAKA,aAAawB,KAAlB,gBACpB,EAAK8D,UAAY,EAAKA,UAAU9D,KAAf,gBACjB,EAAKiE,aAAe,EAAKA,aAAajE,KAAlB,gBACpB,EAAKhB,MAAQ,CACTJ,cACI,CACIvB,GAAK,KACL0B,UAAY,GACZE,SAAW,GACXvB,MAAQ,GACRwG,aAAe,GACf/E,YAAc,IAEtBM,QAAU,IAfE,E,gEAoBjB,IAAD,OACIW,KAAK0D,UAAU1D,KAAK7B,MAAM4F,MAAMC,OAAO/G,IACvC+C,KAAK1B,UAAS,SAAAC,GAAS,MAAK,CACxBC,cAAc,2BACPD,EAAUC,eADJ,IAETvB,GAAI,EAAKkB,MAAM4F,MAAMC,OAAO/G,W,+BAsD5B,IACAuB,EAAkBwB,KAAKpB,MAAvBJ,cACN,OACI,gCACI,uBAAMd,UAAU,KAAhB,UACA,+CACA,uBACA,uBACA,iCACI,qBAAKA,UAAU,iCAAf,SACI,iCACI,qBAAKA,UAAU,uBAAf,SACI,uBACIA,UAAU,eACVyC,KAAK,OACLF,YAAY,aACZhD,GAAG,YACHQ,MAAOe,EAAcG,UACrBoB,SAAYC,KAAK5B,iBAGzB,qBAAKV,UAAU,uBAAf,SACI,uBACIA,UAAU,eACVyC,KAAK,OACLF,YAAY,YACZhD,GAAG,WACHQ,MAAOe,EAAcK,SACrBkB,SAAYC,KAAK5B,iBAGzB,qBAAKV,UAAU,uBAAf,SACI,uBACIA,UAAU,eACVyC,KAAK,OACLF,YAAY,gBACZhD,GAAG,eACHQ,MAAOe,EAAcM,aACrBiB,SAAYC,KAAK5B,iBAGzB,qBAAKV,UAAU,uBAAf,SACI,uBACIA,UAAU,eACVyC,KAAK,OACLF,YAAY,eACZhD,GAAG,cACHQ,MAAOe,EAAcO,YACrBgB,SAAYC,KAAK5B,iBAGzB,qBAAKV,UAAU,uBAAf,SACI,uBACIA,UAAU,eACVyC,KAAK,OACLF,YAAY,QACZhD,GAAG,QACHQ,MAAOe,EAAclB,MACrByC,SAAYC,KAAK5B,iBAIzB,cAAC,IAAD,CAAMmE,GAAI,WAAY7E,UAAU,iBAAhC,oBAGA,mBAAG0C,QAASJ,KAAK6D,aAAcnG,UAAU,kBAAkBC,KAAK,SAAhE,2BAGA,iCAKZ,4BAAIqC,KAAKpB,MAAMS,iB,GAzJKgB,a,2CC2HrB4D,E,4MAhHbrF,MAAO,CACLJ,mBAAcQ,EACdzB,KAAK2G,MAASC,OAAO,cACrBC,KAAM,S,EAORV,UAAY,SAACzG,GACXgC,EAAkByE,UAAUzG,GAAIkC,MAAK,SAAAC,GACnC,EAAKd,SAAS,CACZE,cAAeY,EAASlC,OAE1BoC,QAAQC,IAAIH,EAASlC,SAEtBwC,OAAM,SAAArB,GACLiB,QAAQC,IAAIlB,O,EAGhBD,aAAc,SAACb,GACb+B,QAAQC,IAAI,EAAKX,OACjBU,QAAQC,IAAIhC,GACZ,IAAI8G,EAAUH,IAAO3G,GAAM4G,OAAO,cAClC,EAAK7F,SAAS,CACZf,KAAK8G,K,EAKTC,WAAW,SAACF,GACV9E,QAAQC,IAAI6E,GACZ,IAAIG,EAAUL,IAAOE,GAAMD,OAAO,SAClC,EAAK7F,SAAS,CACZ8F,KAAKG,K,EAGTC,aAAe,WACb,IAAIjH,EAAO,EAAKqB,MAAMrB,KAClB6G,EAAO,EAAKxF,MAAMwF,KAClBK,EAAkB,EAAK7F,MAAMJ,cAAcvB,GAC3CC,EAAM,CACR,KAAQK,EACR,KAAO6G,GAETnF,EAAkByF,gBAAgBD,EAAiBvH,GAClDiC,MAAK,SAAAwF,GAEFrF,QAAQC,IAAIoF,GACZ,EAAKxG,MAAMqB,QAAQC,KAAK,gB,kEA5C5BO,KAAK0D,UAAU1D,KAAK7B,MAAM4F,MAAMC,OAAO/G,M,+BAqDvC,OAFAqC,QAAQC,IAAIS,KAAKpB,OAGf,qBAAKlB,UAAU,yBAAf,SAKIsC,KAAKpB,MAAMJ,cACX,gCACE,sCAIA,6DAC4BwB,KAAKpB,MAAMJ,cAAcG,UADrD,IACiEqB,KAAKpB,MAAMJ,cAAcK,YAE1F,uBACA,uBAAOnB,UAAU,cAAjB,SACE,gCACE,+BACE,6BACE,qBAAKA,UAAU,SAAf,SACE,wBAAOA,UAAU,mBAAjB,cAAqC,oBAAIA,UAAU,UAAd,2BACnC,cAAC,IAAD,CAAYT,GAAG,OAAO2H,WAAS,EAACnH,MAAOuC,KAAKpB,MAAMrB,KAAMwC,SAAUC,KAAK5B,sBAI7E,6BACE,qBAAKV,UAAU,sCAAf,SACE,wBAAOA,UAAU,mBAAjB,cAAqC,oBAAIA,UAAU,UAAd,4BACnC,cAAC,IAAD,CAAYmH,gBAAc,EAACC,oBAAkB,EAACrH,MAAOuC,KAAKpB,MAAMwF,KAAMW,WAAW,QAAQC,cAAe,GAAIjF,SAAUC,KAAKsE,2BASrI,qBAAK5G,UAAU,uBAAf,SACE,wBAAQA,UAAU,2CAA2C0C,QAASJ,KAAKwE,aAA3E,mCAMN,uE,GA1GkBnE,a,SCoEb4E,G,mNAzEbrG,MAAM,CACJrB,KAAK2G,MAASC,OAAO,cACrBe,kBAAalG,EACbmG,WAAW,I,EAGb/G,aAAc,SAACb,GAEb,IAAI8G,EAAUH,IAAO3G,GAAM4G,OAAO,cAClC7E,QAAQC,IAAI8E,GACZ,EAAK/F,SAAS,CACZf,KAAK8G,IAIPpF,EAAkBmG,uBAAuB,EAAKxG,MAAMrB,MACnD4B,MAAK,SAAAwF,GACJ,IAAMO,EAAeP,EAAIzH,KACzBoC,QAAQC,IAAI2F,GACZ,EAAK5G,SAAS,CACZ4G,aAAaA,Q,8DAIHjI,GAAI,IAAD,OACnBgC,EAAkByE,UAAUzG,GAAIkC,MAAK,SAAAC,GACnCE,QAAQC,IAAIH,EAASlC,KAAKyB,UAAY,IAAMS,EAASlC,KAAK2B,UAC1D,EAAKD,MAAMuG,WAAa/F,EAASlC,KAAKyB,UAAY,IAAMS,EAASlC,KAAK2B,YACrEa,OAAM,SAAArB,GACPiB,QAAQC,IAAIlB,Q,+BAIL,IAAD,OAEN,OACE,8BACE,qBAAKX,UAAU,SAAf,SACA,gCACI,gCACE,+BACE,6BACE,cAAC,IAAD,CAAUqC,SAAUC,KAAK5B,iBAE3B,6BACE,kCAEI4B,KAAKpB,MAAMsG,aACXlF,KAAKpB,MAAMsG,aAAa9B,KAAI,SAAAiC,GAAG,OAC7BA,EACA,qBAAKC,OAAQ,EAAKC,gBAAgBF,EAAIG,UAAWC,IAAE,EAAnD,SACE,oBAAG/H,UAAU,YAAb,kCACwB2H,EAAIjB,KAD5B,SACwC,EAAKxF,MAAMuG,gBAGpD,QAGH,mBAAGzH,UAAU,YAAb,8E,GA5DC2C,cC8BRqF,E,kDAxBd,WAAYvH,GAAQ,IAAD,8BAClB,cAAMA,IACDS,MAAQ,CAACsE,QAAS,IAFL,E,qDAMlB,OACC,8BACC,cAAC,IAAD,UACC,sBAAKxF,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,IAAD,CAAOiI,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,IACxC,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,oBAAoBC,UAAWG,IACjD,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,kBAAkBC,UAAWC,IAC/C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,eAAeC,UAAWI,IAC5C,cAAC,IAAD,CAAON,OAAK,EAACC,KAAK,yBAAyBC,UAAW5B,IACtD,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,YAAYC,UAAWZ,e,GAlB7BzB,IAAMnD,WCCJ6F,QACW,cAA7BvD,OAAOG,SAASqD,UAEe,UAA7BxD,OAAOG,SAASqD,UAEhBxD,OAAOG,SAASqD,SAASpC,MACvB,2D,OCXNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxH,MAAK,SAAAyH,GACJA,EAAaC,gBAEdnH,OAAM,SAAAoH,GACLxH,QAAQwH,MAAMA,EAAMzH,c","file":"static/js/main.d6ed3e4c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL:\"http://localhost:8080/\",\r\n  headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n});\r\n","import http from './http-common';\r\n\r\nclass ClientDataService{\r\n     getAll(){\r\n         return http.get(\"/clients/all\");\r\n     }\r\n     getClient(id){\r\n       return http.get(`/clients/${id}`);\r\n     }\r\n     postClient(data){\r\n       return http.post(\"/clients/add\" , data);\r\n     }\r\n     updateClient(id, data){\r\n       return http.put(`/clients/update/${id}`, data);\r\n     }\r\n     deleteClient(id){\r\n       return http.delete(`/clients/delete/${id}`);\r\n     }\r\n     deleteClients(){\r\n         return http.delete(\"/clients/deleteAll\");\r\n     }\r\n\r\n    sendEmail(email){\r\n        return http.post(`/clients/sendmail/${email}`);\r\n    }\r\n    makeAppointment(id,data){\r\n      // console.log(id,data);\r\n        return http.post(`/clients/makeAppointment/`+ id, data);\r\n    }\r\n    getAppointmentsForDate(date){\r\n        // console.log(date);\r\n        return http.get(`/clients/getAppointmentsForDate/${date}`);\r\n    }\r\n\r\n }\r\nexport default new ClientDataService();\r\n\r\n","import React, { Component } from \"react\";\r\nimport ClientDataService from \"../logic/ClientDataService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport validator from 'validator';\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = (value) => {\r\n    if (!validator.isEmail(value)) {\r\n        return `${value} is not a valid email.`\r\n    }\r\n};\r\n\r\nconst vname = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The name must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst vplate = value => {\r\n    if (value.length < 3 || value.length > 8) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The license plate must be between 3 and 8 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst vPhoneNumber = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addClient = this.addClient.bind(this);\r\n        this.state = {\r\n            currentClient: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                licensePlate: \"\",\r\n                phoneNumber: \"\"\r\n            },\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n            this.setState(prevState => ({\r\n                currentClient: {\r\n                    ...prevState.currentClient,\r\n                    [e.target.id]: e.target.value\r\n                }\r\n            }));\r\n    }\r\n\r\n    addClient = () => {\r\n        const data = {\r\n            firstName: this.state.currentClient.firstName,\r\n            lastName: this.state.currentClient.lastName,\r\n            email: this.state.currentClient.email,\r\n            licensePlate: this.state.currentClient.licensePlate,\r\n            phoneNumber: this.state.currentClient.phoneNumber\r\n        };\r\n\r\n        if (this.state.currentClient.firstName !== undefined && this.state.currentClient.lastName !== undefined && this.state.currentClient.email !== undefined && this.state.currentClient.licensePlate !== undefined && this.state.currentClient.phoneNumber !== undefined) {\r\n            ClientDataService.postClient(data)\r\n                .then(response => {\r\n                    this.setState({\r\n                        currentClient: {\r\n                            firstName: response.data.firstName,\r\n                            lastName: response.data.lastName,\r\n                            email: response.data.email,\r\n                            licensePlate: response.data.licensePlate,\r\n                            phoneNumber: response.data.phoneNumber\r\n                        },\r\n                        message: \"Client Added!\"\r\n\r\n                    });\r\n\r\n                    console.log(response.data);\r\n                })\r\n                .then(() => {\r\n                    this.props.history.push('/clients')\r\n                })\r\n\r\n                .catch(e => {\r\n                    console.log(e);\r\n                });\r\n        }\r\n        else {\r\n            alert(\"there is an invalid data input\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"h3\">\r\n                    <h1 id={\"title\"}>Register Client</h1>\r\n                    <hr style={{ backgroundColor: \"#6aa5b3\" }} />\r\n                    <br />\r\n                    <center>\r\n                        <div className=\"col-12 col-lg-4 mt-2 hv-center\">\r\n                            <Form>\r\n                                <div className=\"form-group text-left\">\r\n                                    <Input\r\n                                        onChange={this.handleChange}\r\n                                        className=\"form-control\"\r\n                                        id=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        validations={[required, vname]}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group text-left\">\r\n                                    <Input onChange={this.handleChange} className=\"form-control\" id=\"lastName\" placeholder=\"Last Name\" validations={[required, vname]} />\r\n                                </div>\r\n                                <div className=\"form-group text-left\">\r\n                                    <Input onChange={this.handleChange} className=\"form-control\" id=\"licensePlate\" placeholder=\"License Plate\" validations={[required, vplate]} />\r\n                                </div>\r\n                                <div className=\"form-group text-left\">\r\n                                    <Input onChange={this.handleChange} type=\"tel\" className=\"form-control\" id=\"phoneNumber\" placeholder=\"Phone Number\" validations={[required, vPhoneNumber]} />\r\n                                </div>\r\n                                <div className=\"form-group text-left\">\r\n                                    <Input onChange={this.handleChange} type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Email\" validations={[required, email]} />\r\n                                </div>\r\n\r\n                                <a onClick={this.addClient} className=\"btn btn-info\" role=\"button\" style={{ backgroundColor: \"#ff6a00\" }}>Register Client</a>\r\n\r\n                                <br />\r\n                            </Form>\r\n                        </div>\r\n                    </center>\r\n                </span>\r\n                <br />\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Register;\r\n\r\n","import http from './http-common';\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"file\", file);\r\n\r\n    return http.post(\"/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return http.get(\"/files\");\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();","import React, { Component, useState } from \"react\";\r\nimport UploadService from \"../logic/upload-files.service\";\r\n\r\n\r\nexport default class UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          selectedFiles: undefined,\r\n          currentFile: undefined,\r\n          progress: 0,\r\n          message: \"\",\r\n    \r\n          fileInfos: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        UploadService.getFiles().then((response) => {\r\n          this.setState({\r\n            fileInfos: response.data,\r\n          });\r\n        });\r\n    }\r\n    selectFile = (event) =>{\r\n        this.setState({\r\n          selectedFiles: event.target.files,\r\n        });\r\n    }\r\n    upload = () =>{\r\n        let currentFile = this.state.selectedFiles[0];\r\n    \r\n        this.setState({\r\n          progress: 0,\r\n          currentFile: currentFile,\r\n        });\r\n    \r\n        UploadService.upload(currentFile, (event) => {\r\n          this.setState({\r\n            progress: Math.round((100 * event.loaded) / event.total),\r\n          });\r\n        })\r\n          .then((response) => {\r\n            this.setState({\r\n              message: response.data.message,\r\n            });\r\n            console.log(response.data.message);\r\n            return UploadService.getFiles();\r\n          })\r\n          .then((files) => {\r\n            this.setState({\r\n              fileInfos: files.data,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              progress: 0,\r\n              message: \"Could not upload the file!\",\r\n              currentFile: undefined,\r\n            });\r\n          });\r\n    \r\n        this.setState({\r\n          selectedFiles: undefined,\r\n        });\r\n    }\r\n  render() {\r\n    const {\r\n        selectedFiles,\r\n        currentFile,\r\n        progress,\r\n        message,\r\n        fileInfos,\r\n      } = this.state;\r\n  \r\n      return (\r\n        <div>\r\n          {currentFile && (\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                role=\"progressbar\"\r\n                aria-valuenow={progress}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                style={{ width: progress + \"%\", backgroundColor:\"#ff6a00\" }}\r\n              >\r\n                {progress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n   <form class=\"md-form\">\r\n          <label className=\"btn btn-default\">\r\n            <input id=\"selectFile\" type=\"file\" onChange={this.selectFile} />\r\n          </label>\r\n\r\n\r\n   </form>\r\n\r\n\r\n      <div id=\"upload\">\r\n          <button className=\"btn\"\r\n                  style={{backgroundColor:\"#ff6a00\", color:\"#FFF\"}}\r\n            disabled={!selectedFiles}\r\n            onClick={this.upload}\r\n          >\r\n            Upload\r\n          </button>\r\n          </div>\r\n\r\n          <div className=\"alert alert-light\" role=\"alert\">\r\n            {message}\r\n          </div>\r\n\r\n\r\n\r\n            {/*<div className=\"card\">*/}\r\n          {/*  <div className=\"card-header\">List of Files</div>*/}\r\n          {/*  <ul className=\"list-group list-group-flush\">*/}\r\n          {/*    {fileInfos &&*/}\r\n          {/*      fileInfos.map((file, index) => (*/}\r\n          {/*        <li className=\"list-group-item\" key={index}>*/}\r\n          {/*          <a href={file.url}>{file.name}</a>*/}\r\n          {/*        </li>*/}\r\n          {/*      ))}*/}\r\n          {/*  </ul>*/}\r\n          {/*</div>*/}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport UploadFiles from \"../components/upload-files-component\"\r\n\r\n class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar navbar-light bg-white\">\r\n                <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"/registerClient\">\r\n          <img className=\"imglogo\" src=\"images/sioux.png\" alt=\"\"/>\r\n              </a>\r\n                    <a className=\"navbar-brand\" href=\"/registerClient\">\r\n                       Secretary App\r\n                    </a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n        \r\n                    <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n                        <ul className=\"navbar-nav \">\r\n                            <li className=\"nav-item\">\r\n                                    <Link id=\"clients\"to={\"/clients\"} className=\"nav-link\">\r\n                                        Clients\r\n                                    </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/registerClient\"} className=\"nav-link\">\r\n                                    Register Client\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link id=\"uploadImage\"to={\"/uploadImage\"} className=\"nav-link\">\r\n                                Upload\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/calendar\"} className=\"nav-link\">\r\n                                Calendar\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n                <hr style={{backgroundColor:\"#6aa5b3\", height:\"4vh\"}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport ClientDataService from \"../logic/ClientDataService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass TableComponent extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {clients: []};\r\n    this.retrieveClients = this.retrieveClients.bind(this);\r\n  }\r\n\r\n  componentDidMount () {\r\n      this.retrieveClients();\r\n  }\r\n\r\n    retrieveClients() {\r\n        ClientDataService.getAll()\r\n            .then(response => {\r\n                this.setState({\r\n                    clients: response.data\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    deleteClient = (id) => {\r\n      if(window.confirm('Are you sure?')) {\r\n          ClientDataService.deleteClient(id)\r\n              .then(response => {\r\n                  console.log(response.data);\r\n              })\r\n              .catch(e => {\r\n                  console.log(e);\r\n              });\r\n          this.retrieveClients();\r\n          window.location.reload(false);\r\n      }\r\n  }\r\n\r\n  emailClient = (email) => {\r\n      ClientDataService.sendEmail(email)\r\n          .then(response => {\r\n              alert(response.data);\r\n          })\r\n          .catch(e => {\r\n              alert('Error sending email, check if the email is correct');\r\n              console.log(e);\r\n          });\r\n  }\r\n\r\n  render(){\r\n  return (\r\n      <center>\r\n    <table className=\"zui-table zui-table-rounded\" style={{width:\"70%\"}} >\r\n    <thead>\r\n      <tr>\r\n      <th className=\"tableHeader\">First Name</th>\r\n          <th className=\"tableHeader\">Last Name</th>\r\n          <th className=\"tableHeader\">License Plate</th>\r\n          <th className=\"tableHeader\">Email</th>\r\n          <th className=\"tableHeader\">Phone Number</th>\r\n          <th className=\"tableHeader\"></th>\r\n          <th className=\"tableHeader\"></th>\r\n          <th className=\"tableHeader\"></th>\r\n\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      { (this.state.clients.length > 0) ? this.state.clients.map( (client, index) => {\r\n           return (\r\n            <tr key={ index }>\r\n                <td className=\"tableCol\">{ client.firstName }</td>\r\n                <td className=\"tableCol\">{ client.lastName }</td>\r\n                <td className=\"tableCol\">{ client.licensePlate}</td>\r\n                <td className=\"tableCol\">{ client.email }</td>\r\n                <td className=\"tableCol\">{ client.phoneNumber }</td>\r\n                <td className=\"tableCol\"><center><button className=\"btn btn-info\">\r\n                    <Link style={{color:\"#FFFFFF\"}} to={\"/createAppointment/\" + client.id} >\r\n                        Make Appointment\r\n                    </Link>\r\n                </button></center>\r\n                </td>\r\n                <td className=\"tableCol\"><center><button className=\"btn btn-warning\">\r\n                    <Link style={{color:\"#FFFFFF\"}} to={\"/updateClient/\" + client.id} >\r\n                        Update\r\n                    </Link></button></center>\r\n                </td>\r\n                <td className=\"tableCol\"><center><button onClick={() => this.deleteClient(client.id)} className=\"btn btn-danger\">Delete</button></center></td>\r\n            </tr>\r\n          )\r\n         }) : <tr><td colSpan=\"5\">Loading...</td></tr> }\r\n      </tbody>\r\n    </table>\r\n    </center>\r\n  );\r\n  }\r\n}\r\n\r\nexport default TableComponent","import React, {Component} from 'react';\r\nimport ClientDataService from '../logic/ClientDataService';\r\nimport {BrowserRouter, Link, Redirect} from \"react-router-dom\";\r\n\r\nexport default class Update extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getClient = this.getClient.bind(this);\r\n    this.updateClient = this.updateClient.bind(this);\r\n    this.state = {\r\n        currentClient:\r\n            {\r\n                id : null,\r\n                firstName : \"\",\r\n                lastName : \"\",\r\n                email : \"\",\r\n                licencePlate : \"\",\r\n                phoneNumber : \"\"\r\n            },\r\n        message : \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n      this.getClient(this.props.match.params.id);\r\n      this.setState(prevState => ({\r\n          currentClient: {\r\n              ...prevState.currentClient,\r\n              id: this.props.match.params.id\r\n          }\r\n      }));\r\n  }\r\n\r\n  getClient = (id) =>{\r\n    ClientDataService.getClient(id).then(response => {\r\n      this.setState({\r\n        currentClient: response.data\r\n      });\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e)\r\n    });\r\n  }\r\n\r\n    handleChange = (e) => {\r\n        const val = e.target.value;\r\n        const tid = e.target.id;\r\n        this.setState(prevState => ({\r\n            currentClient: {\r\n                ...prevState.currentClient,\r\n                [tid]: val\r\n            }\r\n        }));\r\n        console.log(val + \" \" + tid)\r\n    }\r\n\r\n    updateClient = () =>{\r\n        if(this.state.currentClient.firstName != \"\" || this.state.currentClient.lastName != \"\" || this.state.currentClient.licencePlate !=\"\" || this.state.currentClient.phoneNumber.length == 9)\r\n        {ClientDataService.updateClient(\r\n            this.state.currentClient.id,\r\n            this.state.currentClient\r\n        )\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    alert: \"The client was updated successfully!\"\r\n                });\r\n            })\r\n            .then(()=>{\r\n                this.props.history.push('/clients')\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        }\r\n        else{\r\n            alert(\"The input you gave is inorrect\")\r\n        }\r\n            \r\n    }\r\n\r\n    render() {\r\n        let { currentClient } = this.state;\r\n        return(\r\n            <div>\r\n                <span className=\"h3\">\r\n                <h1>Update Client</h1>\r\n                <hr/>\r\n                <br/>\r\n                <center>\r\n                    <div className=\"col-12 col-lg-4 mt-2 hv-center\">\r\n                        <form>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                    id=\"firstName\"\r\n                                    value={currentClient.firstName}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Last Name\"\r\n                                    id=\"lastName\"\r\n                                    value={currentClient.lastName}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"License Plate\"\r\n                                    id=\"licensePlate\"\r\n                                    value={currentClient.licensePlate}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Phone Number\"\r\n                                    id=\"phoneNumber\"\r\n                                    value={currentClient.phoneNumber}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-left\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    id=\"email\"\r\n                                    value={currentClient.email}\r\n                                    onChange = {this.handleChange}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <Link to={\"/clients\"} className=\"btn btn-danger\"  >\r\n                                    Cancel\r\n                            </Link>\r\n                            <a onClick={this.updateClient} className=\"btn btn-warning\" role=\"button\" >\r\n                               Update Client \r\n                            </a>\r\n                            <br/>\r\n                        </form>\r\n                    </div>\r\n                </center>{/*TODO center tag to div align center*/}\r\n                </span>\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component,useState} from 'react';\r\nimport ClientDataService from '../logic/ClientDataService';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n// const Example = () => {\r\n//   const [startDate, setStartDate] = useState(new Date());\r\n//   return (\r\n//     <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n//   );\r\n// };\r\n\r\nclass assignMeeting extends Component{\r\n\r\n  state ={\r\n    currentClient:undefined,\r\n    date:moment().format(\"DD-MM-YYYY\"),\r\n    time: '10:00'\r\n  }\r\n  componentDidMount(){\r\n    this.getClient(this.props.match.params.id);\r\n    \r\n  }\r\n\r\n  getClient = (id) =>{\r\n    ClientDataService.getClient(id).then(response => {\r\n      this.setState({\r\n        currentClient: response.data\r\n      });\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e)\r\n    });\r\n  }\r\n  handleChange =(date)=>{\r\n    console.log(this.state);\r\n    console.log(date);\r\n    var newDate = moment(date).format(\"DD-MM-YYYY\")\r\n    this.setState({\r\n      date:newDate\r\n\r\n    })\r\n    // document.getElementById(\"date\").value=this.state.date;\r\n  }\r\n  handleTime=(time)=>{\r\n    console.log(time);\r\n    var newTime = moment(time).format(\"HH:mm\");\r\n    this.setState({\r\n      time:newTime\r\n    })\r\n  }\r\n  handleSubmit = () =>{\r\n    var date = this.state.date;\r\n    var time = this.state.time;\r\n    var currentClientID = this.state.currentClient.id;\r\n    var data ={\r\n      \"date\": date,\r\n      \"time\":time\r\n    }\r\n    ClientDataService.makeAppointment(currentClientID, data)\r\n    .then(res =>{\r\n        // window.location.href='/clients'\r\n        console.log(res);\r\n        this.props.history.push(\"/clients\")\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state);\r\n    \r\n    return(\r\n      <div className=\"createAppointmentHello\" >\r\n\r\n        \r\n\r\n        {\r\n          this.state.currentClient ?\r\n          <div >\r\n            <p>\r\n             Hello\r\n            </p> \r\n\r\n            <div>\r\n             create an appointment for {this.state.currentClient.firstName} {this.state.currentClient.lastName}\r\n            </div>\r\n            <br></br>\r\n            <table className=\"centerTable\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <div className=\"col-12\">\r\n                      <label className=\"labelAppointment\"> <h6 className=\"margin3\">select a date</h6>\r\n                        <DatePicker id=\"date\" autoFocus value={this.state.date} onChange={this.handleChange} />\r\n                      </label>\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className=\"col-12 createAppointmentDivforInput\">\r\n                      <label className=\"labelAppointment\"> <h6 className=\"margin3\"> select a time</h6>\r\n                        <DatePicker showTimeSelect showTimeSelectOnly value={this.state.time} dateFormat=\"HH:mm\" timeIntervals={30} onChange={this.handleTime}></DatePicker>\r\n                  \r\n                      </label>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              \r\n            </table>\r\n              <div className=\"divButtonAppointment\">\r\n                <button className=\"btn btn-primary btn-lg buttonAppointment\" onClick={this.handleSubmit}>\r\n                  Make Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          :\r\n          <h3> ... waiting for client to load</h3>\r\n        }\r\n       \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default assignMeeting;","import React, { Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport ClientDataService from '../logic/ClientDataService';\r\nimport moment from 'moment';\r\n\r\nclass calendar extends Component{\r\n\r\n  state={\r\n    date:moment().format(\"DD-MM-YYYY\"),\r\n    appointments:undefined,\r\n    personName:\"\"\r\n  }\r\n\r\n  handleChange =(date)=>{\r\n    \r\n    var newDate = moment(date).format(\"DD-MM-YYYY\")\r\n    console.log(newDate);\r\n    this.setState({\r\n      date:newDate\r\n\r\n    });\r\n\r\n    ClientDataService.getAppointmentsForDate(this.state.date)\r\n    .then(res =>{\r\n      const appointments = res.data;\r\n      console.log(appointments);\r\n      this.setState({\r\n        appointments:appointments\r\n      })\r\n    })\r\n  }\r\n  getFullNameById(id){\r\n  ClientDataService.getClient(id).then(response => {\r\n    console.log(response.data.firstName + \" \" + response.data.lastName);\r\n    this.state.personName = response.data.firstName + \" \" + response.data.lastName;\r\n  }).catch(e => {\r\n    console.log(e);\r\n  });\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"center\">\r\n        <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Calendar onChange={this.handleChange}/>\r\n                </td>\r\n                <td>\r\n                  <section>\r\n                    {\r\n                      this.state.appointments ?\r\n                      this.state.appointments.map(app =>\r\n                        app ?\r\n                        <div onLoad={this.getFullNameById(app.personID)} on>\r\n                          <p className=\"blackFont\">\r\n                            Scheduled meeting at {app.time} with {this.state.personName}\r\n                          </p>\r\n                        </div>\r\n                        :null\r\n                      )\r\n                      :\r\n                      <p className=\"blackFont\">\r\n                        There are no meetings scheduled for this day.\r\n                      </p>\r\n                      \r\n                    }\r\n                  </section>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default calendar;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport RegisterClient from \"./components/register.component\"\r\nimport Header from \"./layouts/Header\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Table from \"./components/table.component\";\r\nimport UpdateClient from \"./components/update.component\"\r\nimport UploadImage from \"./components/upload-files-component\";\r\nimport assignMeeting from \"./components/assignMeeting\";\r\nimport calendar from './components/calendar'\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {clients: []};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={RegisterClient} />\r\n\t\t\t\t\t\t<Route exact path=\"/clients\" component={Table} />\r\n\t\t\t\t\t\t<Route exact path=\"/updateClient/:id\" component={UpdateClient} />\r\n\t\t\t\t\t\t<Route exact path=\"/registerClient\" component={RegisterClient} />\r\n\t\t\t\t\t\t<Route exact path=\"/uploadImage\" component={UploadImage} />\r\n\t\t\t\t\t\t<Route exact path=\"/createAppointment/:id\" component={assignMeeting}/>\r\n\t\t\t\t\t\t<Route exact path=\"/calendar\" component={calendar}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t)\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}