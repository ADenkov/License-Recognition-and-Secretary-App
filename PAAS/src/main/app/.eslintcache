[{"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\index.js":"1","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\layouts\\Header.js":"2","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\register.component.js":"3","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\upload-files.component.js":"4","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\assignMeeting.component.js":"5","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\ipcamera.service.js":"6","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\calendar.component.js":"7","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\table.component.js":"8","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\upload-files.service.js":"9","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\client.service.js":"10","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\App.js":"11","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\serviceWorker.js":"12","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\update.component.js":"13","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\index.js":"14","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\update.component.js":"15","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\assignMeeting.component.js":"16","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\register.component.js":"17","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\calendar.component.js":"18","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\upload-files.component.js":"19","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\serviceWorker.js":"20","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\App.js":"21","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\layouts\\Header.js":"22","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\table.component.js":"23"},{"size":570,"mtime":1610050259365,"results":"24","hashOfConfig":"25"},{"size":3087,"mtime":1611262541766,"results":"26","hashOfConfig":"25"},{"size":10625,"mtime":1611014729913,"results":"27","hashOfConfig":"25"},{"size":1668,"mtime":1611261330157,"results":"28","hashOfConfig":"25"},{"size":3643,"mtime":1611014729971,"results":"29","hashOfConfig":"25"},{"size":212,"mtime":1611261398033,"results":"30","hashOfConfig":"25"},{"size":2611,"mtime":1611072417451,"results":"31","hashOfConfig":"25"},{"size":3493,"mtime":1611308793674,"results":"32","hashOfConfig":"25"},{"size":437,"mtime":1611254755247,"results":"33","hashOfConfig":"25"},{"size":1026,"mtime":1611261874346,"results":"34","hashOfConfig":"25"},{"size":1305,"mtime":1611261970422,"results":"35","hashOfConfig":"25"},{"size":5227,"mtime":1610050259369,"results":"36","hashOfConfig":"25"},{"size":10097,"mtime":1611016057672,"results":"37","hashOfConfig":"25"},{"size":570,"mtime":1610050259365,"results":"38","hashOfConfig":"39"},{"size":10097,"mtime":1611016057672,"results":"40","hashOfConfig":"39"},{"size":3643,"mtime":1611014729971,"results":"41","hashOfConfig":"39"},{"size":10625,"mtime":1611014729913,"results":"42","hashOfConfig":"39"},{"size":2715,"mtime":1611323429932,"results":"43","hashOfConfig":"39"},{"size":1668,"mtime":1611261330157,"results":"44","hashOfConfig":"39"},{"size":5227,"mtime":1610050259369,"results":"45","hashOfConfig":"39"},{"size":1305,"mtime":1611261970422,"results":"46","hashOfConfig":"39"},{"size":3087,"mtime":1611262541766,"results":"47","hashOfConfig":"39"},{"size":4556,"mtime":1611318131501,"results":"48","hashOfConfig":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"4n5rgc",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"r4cu1p",{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\index.js",[],["106","107"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\layouts\\Header.js",[],["108","109"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\register.component.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\upload-files.component.js",["110","111"],"import React, { Component, useState } from \"react\";\r\nimport UploadService from \"../logic/upload-files.service\";\r\nimport IPCameraDataService from \"../logic/ipcamera.service\"\r\nimport {FormLabel} from \"react-bootstrap\";\r\n\r\n\r\nexport default class UploadFiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          ipAddress:\"\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //All previous IPs\r\n    }\r\n\r\n    start = () =>{\r\n        const data = {\r\n                ip:this.state.ipAddress,\r\n        };\r\n        console.log(data);\r\n\r\n        IPCameraDataService.startSoftware(data)\r\n            .then(()=>{\r\n                        alert('Software Started');\r\n        });\r\n            // .catch(err =>{\r\n            //     switch (err.response.status){\r\n            //         case 404:\r\n            //             alert('video stream is not valid or is not running');\r\n            //             break;\r\n            //         case 417:\r\n            //             alert('error processing the stream');\r\n            //             break;\r\n            //         case 500:\r\n            //             alert('Internal Server Error')\r\n            //             break;\r\n            //     }\r\n            // });\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            ipAddress:e.target.value\r\n        })\r\n    }\r\n  render() {\r\n      return (\r\n        <div>\r\n         <FormLabel>IP:</FormLabel>\r\n            <input type={\"text\"} value={this.state.ipAddress} onChange={this.handleChange} id={\"ipAddress\"}/>\r\n            <button onClick={()=>{this.start();}}>Start</button>\r\n        </div>\r\n      );\r\n  }\r\n}","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\assignMeeting.component.js",["112"],"import React, { Component,useState} from 'react';\r\nimport ClientDataService from '../logic/client.service';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n// const Example = () => {\r\n//   const [startDate, setStartDate] = useState(new Date());\r\n//   return (\r\n//     <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n//   );\r\n// };\r\n\r\nclass assignMeetingComponent extends Component{\r\n\r\n  state ={\r\n    currentClient:undefined,\r\n    date:moment().format(\"DD-MM-YYYY\"),\r\n    time: '10:00'\r\n  }\r\n  componentDidMount(){\r\n    this.getClient(this.props.match.params.id);\r\n    \r\n  }\r\n\r\n  getClient = (id) =>{\r\n    ClientDataService.getClient(id).then(response => {\r\n      this.setState({\r\n        currentClient: response.data\r\n      });\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e)\r\n    });\r\n  }\r\n  handleChange =(date)=>{\r\n    console.log(this.state);\r\n    console.log(date);\r\n    var newDate = moment(date).format(\"DD-MM-YYYY\")\r\n    this.setState({\r\n      date:newDate\r\n\r\n    })\r\n    // document.getElementById(\"date\").value=this.state.date;\r\n  }\r\n  handleTime=(time)=>{\r\n    console.log(time);\r\n    var newTime = moment(time).format(\"HH:mm\");\r\n    this.setState({\r\n      time:newTime\r\n    })\r\n  }\r\n  handleSubmit = () =>{\r\n    var date = this.state.date;\r\n    var time = this.state.time;\r\n    var currentClientID = this.state.currentClient.id;\r\n    var data ={\r\n      \"date\": date,\r\n      \"time\":time\r\n    }\r\n    ClientDataService.makeAppointment(currentClientID, data)\r\n    .then(res =>{\r\n        // window.location.href='/clients'\r\n        console.log(res);\r\n        this.props.history.push(\"/clients\")\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state);\r\n    \r\n    return(\r\n      <div className=\"createAppointmentHello\" >\r\n\r\n        \r\n\r\n        {\r\n          this.state.currentClient ?\r\n          <div >\r\n            <p>\r\n             Hello\r\n            </p> \r\n\r\n            <div>\r\n             create an appointment for {this.state.currentClient.firstName} {this.state.currentClient.lastName}\r\n            </div>\r\n            <br></br>\r\n            <table className=\"centerTable\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <div className=\"col-12\">\r\n                      <label className=\"labelAppointment\"> <h6 className=\"margin3\">select a date</h6>\r\n                        <DatePicker id=\"date\" autoFocus value={this.state.date} onChange={this.handleChange} />\r\n                      </label>\r\n                    </div>\r\n                  </th>\r\n                  <th>\r\n                    <div className=\"col-12 createAppointmentDivforInput\">\r\n                      <label className=\"labelAppointment\"> <h6 className=\"margin3\"> select a time</h6>\r\n                        <DatePicker showTimeSelect showTimeSelectOnly value={this.state.time} dateFormat=\"HH:mm\" timeIntervals={30} onChange={this.handleTime}></DatePicker>\r\n                  \r\n                      </label>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              \r\n            </table>\r\n              <div className=\"divButtonAppointment\">\r\n                <button className=\"btn btn-primary btn-lg buttonAppointment\" onClick={this.handleSubmit}>\r\n                  Make Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          :\r\n          <h3> ... waiting for client to load</h3>\r\n        }\r\n       \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default assignMeetingComponent;","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\ipcamera.service.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\calendar.component.js",["113","114"],"import React, { Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport ClientDataService from '../logic/client.service';\r\nimport moment from 'moment';\r\n\r\nclass calendarComponent extends Component{\r\n\r\n  state={\r\n    date:moment().format(\"DD-MM-YYYY\"),\r\n    appointments:undefined,\r\n    personName:\"\"\r\n  }\r\n  componentDidUpdate(prevState,prevProps){\r\n    if(prevState != this.state || prevProps != this.props){\r\n       prevState = this.state \r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleChange =(date)=>{\r\n    var newDate = moment(date).format(\"DD-MM-YYYY\")\r\n    console.log(newDate);\r\n    this.setState({\r\n      date:newDate\r\n\r\n    });\r\n\r\n    ClientDataService.getAppointmentsForDate(this.state.date)\r\n    .then(res =>{\r\n      const appointments = res.data;\r\n      console.log(appointments);\r\n      this.setState({\r\n        appointments:appointments\r\n      })\r\n      console.log(this.props);\r\n    })\r\n    this.forceUpdate();\r\n    \r\n  }\r\n  // getFullNameById =(id) =>{\r\n\r\n  //  ClientDataService.getClient(id).then(response => {\r\n  //   console.log(response.data.firstName + \" \" + response.data.lastName);\r\n  //     this.setState({\r\n  //       personName: response.data.firstName + \" \" + response.data.lastName\r\n  //     })\r\n      \r\n  // }).catch(e => {\r\n  //   console.log(e);\r\n  // });\r\n  \r\n  // }\r\n\r\n  render(){\r\n\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"center\">\r\n        <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Calendar onChange={this.handleChange}/>\r\n                </td>\r\n                <td>\r\n                  \r\n                  <section>\r\n                    {\r\n                      this.state.appointments && this.state.appointments.length>0 ?\r\n                      this.state.appointments.map(app =>\r\n                        app ?\r\n                        <div key={app.id} >\r\n\r\n                          <p className=\"blackFont\">\r\n                            Scheduled meeting on {app.date} at {app.time} with {app.personName} \r\n                          </p>\r\n                        </div>\r\n                        :\r\n                        null\r\n                      )\r\n                      :\r\n                      <p className=\"blackFont\">\r\n                        There are no meetings scheduled for this day.\r\n                      </p>\r\n                      \r\n                    }\r\n                  </section>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default calendarComponent;","D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\table.component.js",["115"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\upload-files.service.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\logic\\client.service.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\App.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\serviceWorker.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\React-Secretary\\src\\components\\update.component.js",["116","117","118"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\index.js",[],["119","120"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\update.component.js",["121","122","123"],"import React, {Component} from 'react';\r\nimport ClientDataService from '../logic/client.service';\r\nimport {BrowserRouter, Link, Redirect} from \"react-router-dom\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport validator from \"validator\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = (value) => {\r\n    if (!validator.isEmail(value)) {\r\n        return(\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                {value} is not a valid email.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vname = value => {\r\n    if (value.length < 1 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The name must be between 1 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst vplate = value => {\r\n    if (value.length < 3 || value.length > 8 || value.includes('-') || value.includes(' ')) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The license plate must be between 3 and 8 characters and not contain dashes and whitespace.\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst vPhoneNumber = value => {\r\n    if (value.length < 10 || value.length > 15) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The phone number must be between 10 and 15 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Update extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getClient = this.getClient.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.state = {\r\n        currentClient:\r\n            {\r\n                id : null,\r\n                firstName : \"\",\r\n                lastName : \"\",\r\n                email : \"\",\r\n                licencePlate : \"\",\r\n                phoneNumber : \"\"\r\n            },\r\n        message : \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n      this.getClient(this.props.match.params.id);\r\n      this.setState(prevState => ({\r\n          currentClient: {\r\n              ...prevState.currentClient,\r\n              id: this.props.match.params.id\r\n          }\r\n      }));\r\n  }\r\n\r\n  getClient = (id) =>{\r\n    ClientDataService.getClient(id).then(response => {\r\n      this.setState({\r\n        currentClient: response.data\r\n      });\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e)\r\n    });\r\n  }\r\n\r\n    handleChange = (e) => {\r\n        const val = e.target.value;\r\n        const tid = e.target.id;\r\n        this.setState(prevState => ({\r\n            currentClient: {\r\n                ...prevState.currentClient,\r\n                [tid]: val\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleUpdate(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            ClientDataService.updateClient(\r\n                this.state.currentClient.id,\r\n                this.state.currentClient\r\n            )\r\n                .then(response => {\r\n                    this.setState({\r\n                        currentClient: {\r\n                            firstName: response.data.firstName,\r\n                            lastName: response.data.lastName,\r\n                            email: response.data.email,\r\n                            licensePlate: response.data.licensePlate,\r\n                            phoneNumber: response.data.phoneNumber\r\n                        },\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n\r\n                    console.log(response.data);\r\n                })\r\n                .then(() => {\r\n                    this.props.history.push('/clients')\r\n                })\r\n                .catch(error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                });\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\" style={{width:\"60vw\", color:\"#6aa5b3\"}}>\r\n                <h1 id={\"title\"}>Update Client</h1>\r\n                <hr style={{ backgroundColor: \"#6aa5b3\" }} />\r\n\r\n                <Form\r\n                    onSubmit={this.handleUpdate}\r\n                    ref={c => {\r\n                        this.form = c;\r\n                    }}\r\n                >\r\n                    {!this.state.successful && (\r\n                        <div>\r\n                            <div className=\"form-group\">\r\n                                <span className=\"input-group-addon\"><i className=\"fa fa-user\">First Name</i></span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"firstName\"\r\n                                    id=\"firstName\"\r\n                                    value={this.state.currentClient.firstName}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required, vname]}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <span className=\"input-group-addon\"><i className=\"fa fa-user\">Last Name</i></span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={this.state.currentClient.lastName}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required, vname]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <span className=\"input-group-addon\"><i className=\"fa fa-envelope\">Email</i></span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={this.state.currentClient.email}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required, email]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <span className=\"input-group-addon\"><i className=\"fa fa-home\">License Plate (without dashes and/or whitespace)</i></span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"licensePlate\"\r\n                                    id=\"licensePlate\"\r\n                                    value={this.state.currentClient.licensePlate}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required, vplate]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <span className=\"input-group-addon\"><i className=\"fa fa-phone\">Phone number</i></span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"phoneNumber\"\r\n                                    id=\"phoneNumber\"\r\n                                    value={this.state.currentClient.phoneNumber}\r\n                                    onChange={this.handleChange}\r\n                                    validations={[required, vPhoneNumber]}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn btn-info\" style={{ backgroundColor: \"#ff6a00\", border:\"none\" }}>Update Client</button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {this.state.message && (\r\n                        <div className=\"form-group\">\r\n                            <div\r\n                                className={\r\n                                    this.state.successful\r\n                                        ? \"alert alert-success\"\r\n                                        : \"alert alert-danger\"\r\n                                }\r\n                                role=\"alert\"\r\n                            >\r\n                                {this.state.message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton\r\n                        style={{ display: \"none\" }}\r\n                        ref={c => {\r\n                            this.checkBtn = c;\r\n                        }}\r\n                    />\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}",["124","125"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\assignMeeting.component.js",["126"],["127","128"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\register.component.js",[],["129","130"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\calendar.component.js",["131","132"],"import React, { Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport ClientDataService from '../logic/client.service';\r\nimport moment from 'moment';\r\n\r\nclass calendarComponent extends Component{\r\n\r\n  state={\r\n    date:moment().format(\"DD-MM-YYYY\"),\r\n    appointments:undefined,\r\n    personName:\"\"\r\n  }\r\n  componentDidUpdate(prevState,prevProps){\r\n    if(prevState != this.state || prevProps != this.props){\r\n       prevState = this.state \r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleChange =(date)=>{\r\n    var newDate = moment(date).format(\"DD-MM-YYYY\")\r\n    console.log(newDate);\r\n    this.setState({\r\n      date:newDate\r\n\r\n    });\r\n\r\n    ClientDataService.getAppointmentsForDate(this.state.date)\r\n    .then(res =>{\r\n      const appointments = res.data;\r\n      console.log(appointments);\r\n      this.setState({\r\n        appointments:appointments\r\n      })\r\n      console.log(this.props);\r\n    })\r\n    this.forceUpdate();\r\n    \r\n  }\r\n  // getFullNameById =(id) =>{\r\n\r\n  //  ClientDataService.getClient(id).then(response => {\r\n  //   console.log(response.data.firstName + \" \" + response.data.lastName);\r\n  //     this.setState({\r\n  //       personName: response.data.firstName + \" \" + response.data.lastName\r\n  //     })\r\n      \r\n  // }).catch(e => {\r\n  //   console.log(e);\r\n  // });\r\n  \r\n  // }\r\n\r\n  render(){\r\n\r\n\r\n    return(\r\n      <div>\r\n        <div className=\"center\">\r\n          <center><h3 style={{color:\"red\"}}>To see the appointments double click a date!</h3></center>\r\n        <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <Calendar onChange={this.handleChange}/>\r\n                </td>\r\n                <td>\r\n                  \r\n                  <section>\r\n                    {\r\n                      this.state.appointments && this.state.appointments.length>0 ?\r\n                      this.state.appointments.map(app =>\r\n                        app ?\r\n                        <div key={app.id} >\r\n\r\n                          <p className=\"blackFont\">\r\n                            Scheduled meeting on {app.date} at {app.time} with {app.personName} \r\n                          </p>\r\n                        </div>\r\n                        :\r\n                        null\r\n                      )\r\n                      :\r\n                      <p className=\"blackFont\">\r\n                        There are no meetings scheduled for this day.\r\n                      </p>\r\n                      \r\n                    }\r\n                  </section>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default calendarComponent;","D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\upload-files.component.js",["133","134"],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\serviceWorker.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\App.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\layouts\\Header.js",[],"D:\\git-repos\\tuk\\S3-CB03-Group3\\PAAS\\src\\main\\app\\src\\components\\table.component.js",["135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"146","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":15,"column":18,"nodeType":"149","messageId":"150","endLine":15,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":15,"column":45,"nodeType":"149","messageId":"150","endLine":15,"endColumn":47},{"ruleId":"142","severity":1,"message":"151","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},{"ruleId":"142","severity":1,"message":"152","line":3,"column":9,"nodeType":"144","messageId":"145","endLine":3,"endColumn":22},{"ruleId":"142","severity":1,"message":"153","line":3,"column":24,"nodeType":"144","messageId":"145","endLine":3,"endColumn":28},{"ruleId":"142","severity":1,"message":"154","line":3,"column":30,"nodeType":"144","messageId":"145","endLine":3,"endColumn":38},{"ruleId":"136","replacedBy":"155"},{"ruleId":"138","replacedBy":"156"},{"ruleId":"142","severity":1,"message":"152","line":3,"column":9,"nodeType":"144","messageId":"145","endLine":3,"endColumn":22},{"ruleId":"142","severity":1,"message":"153","line":3,"column":24,"nodeType":"144","messageId":"145","endLine":3,"endColumn":28},{"ruleId":"142","severity":1,"message":"154","line":3,"column":30,"nodeType":"144","messageId":"145","endLine":3,"endColumn":38},{"ruleId":"136","replacedBy":"157"},{"ruleId":"138","replacedBy":"158"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"136","replacedBy":"159"},{"ruleId":"138","replacedBy":"160"},{"ruleId":"136","replacedBy":"161"},{"ruleId":"138","replacedBy":"162"},{"ruleId":"147","severity":1,"message":"148","line":15,"column":18,"nodeType":"149","messageId":"150","endLine":15,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":15,"column":45,"nodeType":"149","messageId":"150","endLine":15,"endColumn":47},{"ruleId":"142","severity":1,"message":"143","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"146","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":21},{"ruleId":"142","severity":1,"message":"151","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":15},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],["163"],["164"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'UploadService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Table' is defined but never used.","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.",["163"],["164"],["163"],["164"],["163"],["164"],["163"],["164"],"no-global-assign","no-unsafe-negation"]